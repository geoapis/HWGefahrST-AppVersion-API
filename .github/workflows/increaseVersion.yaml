name: Update App Version

on:
  workflow_dispatch:
    inputs:
      android:
        description: 'Neue Android-Version'
        required: false
      ios:
        description: 'Neue iOS-Version'
        required: false

jobs:
  update-version:
    runs-on: ubuntu-latest
    env:
      CI_COMMIT_MESSAGE: new AppVersion
      CI_COMMIT_AUTHOR: Continuous Integration

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }} #${{ secrets.WORKFLOW_GIT_ACCESS_TOKEN }}

      - name: Read Current Versions
        id: read_versions
        run: |
          android_version=$(jq -r '.Android' appversion.json)
          ios_version=$(jq -r '.iOS' appversion.json)
          echo "current_android_version=$android_version" >> $GITHUB_ENV
          echo "current_ios_version=$ios_version" >> $GITHUB_ENV

#      - name: Update Versions
#        run: |

      # Commit and push all changed files. 
      # Must only affect files that are listed in "paths-ignore".
      # credits to https://joht.github.io/johtizen/build/2022/01/20/github-actions-push-into-repository.html
      - name: GIT Commit Build Artifacts (coverage, dist, devdist, docs)
        # Only run on main branch push (e.g. pull request merge).
        # if: github.event_name == 'push'
        run: |
          new_android="${{ github.event.inputs.android || env.current_android_version }}"
          new_ios="${{ github.event.inputs.ios || env.current_ios_version }}"
          jq --arg android "$new_android" --arg ios "$new_ios" \
            '.Android = $android | .iOS = $ios' appversion.json > tmp.$$.json && mv tmp.$$.json appversion.json
          git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
          git config --global user.email "username@users.noreply.github.com"
          git add appversion.json
          git commit -m "${{ env.CI_COMMIT_MESSAGE }}"
          git push
